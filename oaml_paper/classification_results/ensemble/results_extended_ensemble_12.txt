Initial model is PreviousImputer | StandardScaler | LeveragingBaggingClassifier(LogisticRegression) and hyperparameters are: {'PreviousImputer': {}, 'StandardScaler': {'with_std': True}, 'LeveragingBaggingClassifier': {'model': (<class 'river.linear_model.glm.LogisticRegression'>, {'optimizer': (<class 'river.optim.sgd.SGD'>, {'lr': (<class 'river.optim.schedulers.Constant'>, {'learning_rate': 0.01})}), 'loss': (<class 'river.optim.losses.Log'>, {'weight_pos': 1.0, 'weight_neg': 1.0}), 'l2': 0.0, 'intercept_init': 0.0, 'intercept_lr': (<class 'river.optim.schedulers.Constant'>, {'learning_rate': 0.01}), 'clip_gradient': 1000000000000.0, 'initializer': (<class 'river.optim.initializers.Zeros'>, {})}), 'n_models': 17, 'w': 3, 'adwin_delta': 0.01, 'bagging_method': 'wt', 'seed': None}}
Online model is updated with latest AutoML pipeline.
Test batch - 0 with RMSE: 0
Test batch - 6000 with Accuracy: 83.30%
Change detected at data point 6106 and current performance is at Accuracy: 83.63%
Online model is updated with Backup Ensemble.
Current model is AdaptiveVotingClassifier and hyperparameters are: {'models': [Pipeline (
  PreviousImputer (),
  StandardScaler (
    with_std=True
  ),
  LeveragingBaggingClassifier (
    model=LogisticRegression (
      optimizer=SGD (
        lr=Constant (
          learning_rate=0.01
        )
      )
      loss=Log (
        weight_pos=1.
        weight_neg=1.
      )
      l2=0.
      intercept_init=0.
      intercept_lr=Constant (
        learning_rate=0.01
      )
      clip_gradient=1e+12
      initializer=Zeros ()
    )
    n_models=17
    w=3
    adwin_delta=0.01
    bagging_method="wt"
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=345
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=0.0001
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=100
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
)], 'use_probabilities': True, 'dwm': True}
Test batch - 7500 with Accuracy: 86.08%
Test batch - 9000 with Accuracy: 86.67%
Change detected at data point 9135 and current performance is at Accuracy: 86.51%
Online model is updated with Backup Ensemble.
Current model is AdaptiveVotingClassifier and hyperparameters are: {'models': [Pipeline (
  PreviousImputer (),
  StandardScaler (
    with_std=True
  ),
  LeveragingBaggingClassifier (
    model=LogisticRegression (
      optimizer=SGD (
        lr=Constant (
          learning_rate=0.01
        )
      )
      loss=Log (
        weight_pos=1.
        weight_neg=1.
      )
      l2=0.
      intercept_init=0.
      intercept_lr=Constant (
        learning_rate=0.01
      )
      clip_gradient=1e+12
      initializer=Zeros ()
    )
    n_models=17
    w=3
    adwin_delta=0.01
    bagging_method="wt"
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=345
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=0.0001
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=100
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=1
    max_features=2
    lambda_value=3
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=208
    max_depth=None
    split_criterion="info_gain"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
)], 'use_probabilities': True, 'dwm': True}
Test batch - 10500 with Accuracy: 86.76%
Test batch - 12000 with Accuracy: 87.00%
Test batch - 13500 with Accuracy: 87.15%
Test batch - 15000 with Accuracy: 87.19%
Change detected at data point 15219 and current performance is at Accuracy: 87.14%
Online model is updated with Backup Ensemble.
Current model is AdaptiveVotingClassifier and hyperparameters are: {'models': [Pipeline (
  PreviousImputer (),
  StandardScaler (
    with_std=True
  ),
  LeveragingBaggingClassifier (
    model=LogisticRegression (
      optimizer=SGD (
        lr=Constant (
          learning_rate=0.01
        )
      )
      loss=Log (
        weight_pos=1.
        weight_neg=1.
      )
      l2=0.
      intercept_init=0.
      intercept_lr=Constant (
        learning_rate=0.01
      )
      clip_gradient=1e+12
      initializer=Zeros ()
    )
    n_models=17
    w=3
    adwin_delta=0.01
    bagging_method="wt"
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=345
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=0.0001
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=100
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=1
    max_features=2
    lambda_value=3
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=208
    max_depth=None
    split_criterion="info_gain"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=145
    max_depth=inf
    split_criterion="gini"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=0
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=300
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
)], 'use_probabilities': True, 'dwm': True}
Test batch - 16500 with Accuracy: 87.11%
Test batch - 18000 with Accuracy: 87.14%
Test batch - 19500 with Accuracy: 87.19%
Test batch - 21000 with Accuracy: 87.08%
Test batch - 22500 with Accuracy: 87.21%
Test batch - 24000 with Accuracy: 87.29%
Test batch - 25500 with Accuracy: 87.40%
Test batch - 27000 with Accuracy: 87.42%
Test batch - 28500 with Accuracy: 87.51%
Test batch - 30000 with Accuracy: 87.50%
Test batch - 31500 with Accuracy: 87.55%
Test batch - 33000 with Accuracy: 87.57%
Test batch - 34500 with Accuracy: 87.60%
Test batch - 36000 with Accuracy: 87.66%
Test batch - 37500 with Accuracy: 87.71%
Test batch - 39000 with Accuracy: 87.75%
Test batch - 40500 with Accuracy: 87.77%
Test batch - 42000 with Accuracy: 87.82%
Test batch - 43500 with Accuracy: 87.82%
Test batch - 45000 with Accuracy: 87.84%
Test batch - 46500 with Accuracy: 87.85%
Test batch - 48000 with Accuracy: 87.87%
Test batch - 49500 with Accuracy: 87.87%
Test batch - 51000 with Accuracy: 87.88%
Test batch - 52500 with Accuracy: 87.92%
Test batch - 54000 with Accuracy: 87.92%
Test batch - 55500 with Accuracy: 87.95%
Test batch - 57000 with Accuracy: 87.96%
Test batch - 58500 with Accuracy: 87.97%
Test batch - 60000 with Accuracy: 87.96%
Test batch - 61500 with Accuracy: 87.98%
Test batch - 63000 with Accuracy: 88.00%
Test batch - 64500 with Accuracy: 88.03%
No drift but retraining point 65220 and current performance is at Accuracy: 88.02%
Online model is updated with Backup Ensemble.
Current model is AdaptiveVotingClassifier and hyperparameters are: {'models': [Pipeline (
  PreviousImputer (),
  StandardScaler (
    with_std=True
  ),
  LeveragingBaggingClassifier (
    model=LogisticRegression (
      optimizer=SGD (
        lr=Constant (
          learning_rate=0.01
        )
      )
      loss=Log (
        weight_pos=1.
        weight_neg=1.
      )
      l2=0.
      intercept_init=0.
      intercept_lr=Constant (
        learning_rate=0.01
      )
      clip_gradient=1e+12
      initializer=Zeros ()
    )
    n_models=17
    w=3
    adwin_delta=0.01
    bagging_method="wt"
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=345
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=0.0001
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=100
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=1
    max_features=2
    lambda_value=3
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=208
    max_depth=None
    split_criterion="info_gain"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=145
    max_depth=inf
    split_criterion="gini"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=0
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=300
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=2
    max_features=2
    lambda_value=2
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=193
    max_depth=None
    split_criterion="gini"
    split_confidence=0.0001
    tie_threshold=0.02
    leaf_prediction="nb"
    nb_threshold=30
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
)], 'use_probabilities': True, 'dwm': True}
Test batch - 66000 with Accuracy: 88.02%
Test batch - 67500 with Accuracy: 88.05%
Test batch - 69000 with Accuracy: 88.08%
Test batch - 70500 with Accuracy: 88.07%
Test batch - 72000 with Accuracy: 88.08%
Test batch - 73500 with Accuracy: 88.08%
Test batch - 75000 with Accuracy: 88.10%
Test batch - 76500 with Accuracy: 88.12%
Test batch - 78000 with Accuracy: 88.19%
Test batch - 79500 with Accuracy: 88.20%
Test batch - 81000 with Accuracy: 88.21%
Test batch - 82500 with Accuracy: 88.23%
Test batch - 84000 with Accuracy: 88.23%
Test batch - 85500 with Accuracy: 88.24%
Test batch - 87000 with Accuracy: 88.26%
Test batch - 88500 with Accuracy: 88.26%
Test batch - 90000 with Accuracy: 88.27%
Test batch - 91500 with Accuracy: 88.27%
Test batch - 93000 with Accuracy: 88.27%
Test batch - 94500 with Accuracy: 88.25%
Test batch - 96000 with Accuracy: 88.25%
Test batch - 97500 with Accuracy: 88.27%
Test batch - 99000 with Accuracy: 88.28%
Test batch - 100500 with Accuracy: 88.30%
Test batch - 102000 with Accuracy: 88.31%
Test batch - 103500 with Accuracy: 88.34%
Test batch - 105000 with Accuracy: 88.34%
Test batch - 106500 with Accuracy: 88.34%
Test batch - 108000 with Accuracy: 88.34%
Test batch - 109500 with Accuracy: 88.33%
Test batch - 111000 with Accuracy: 88.33%
Test batch - 112500 with Accuracy: 88.31%
Test batch - 114000 with Accuracy: 88.32%
No drift but retraining point 115221 and current performance is at Accuracy: 88.33%
Online model is updated with Backup Ensemble.
Current model is AdaptiveVotingClassifier and hyperparameters are: {'models': [Pipeline (
  PreviousImputer (),
  StandardScaler (
    with_std=True
  ),
  LeveragingBaggingClassifier (
    model=LogisticRegression (
      optimizer=SGD (
        lr=Constant (
          learning_rate=0.01
        )
      )
      loss=Log (
        weight_pos=1.
        weight_neg=1.
      )
      l2=0.
      intercept_init=0.
      intercept_lr=Constant (
        learning_rate=0.01
      )
      clip_gradient=1e+12
      initializer=Zeros ()
    )
    n_models=17
    w=3
    adwin_delta=0.01
    bagging_method="wt"
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=345
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=0.0001
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=100
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=1
    max_features=2
    lambda_value=3
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=208
    max_depth=None
    split_criterion="info_gain"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=40
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=145
    max_depth=inf
    split_criterion="gini"
    split_confidence=1e-09
    tie_threshold=0.06
    leaf_prediction="nba"
    nb_threshold=0
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=300
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  AdaptiveRandomForestClassifier (
    n_models=2
    max_features=2
    lambda_value=2
    metric=Accuracy (
      cm=ConfusionMatrix ()
    )
    disable_weighted_vote=False
    drift_detector=ADWIN (
      delta=0.001
    )
    warning_detector=ADWIN (
      delta=0.01
    )
    grace_period=193
    max_depth=None
    split_criterion="gini"
    split_confidence=0.0001
    tie_threshold=0.02
    leaf_prediction="nb"
    nb_threshold=30
    nominal_attributes=None
    splitter=None
    binary_split=False
    max_size=32
    memory_estimate_period=2000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
), Pipeline (
  PreviousImputer (),
  HoeffdingAdaptiveTreeClassifier (
    grace_period=98
    max_depth=inf
    split_criterion="hellinger"
    split_confidence=1e-09
    tie_threshold=0.07
    leaf_prediction="nb"
    nb_threshold=20
    nominal_attributes=None
    splitter=GaussianSplitter (
      n_splits=10
    )
    bootstrap_sampling=True
    drift_window_threshold=400
    adwin_confidence=0.002
    binary_split=False
    max_size=100
    memory_estimate_period=1000000
    stop_mem_management=False
    remove_poor_attrs=False
    merit_preprune=True
    seed=None
  )
)], 'use_probabilities': True, 'dwm': True}
Test batch - 115500 with Accuracy: 88.32%
Test batch - 117000 with Accuracy: 88.32%
Test batch - 118500 with Accuracy: 88.30%
Test batch - 120000 with Accuracy: 88.29%
Test batch - 121500 with Accuracy: 88.28%
Test batch - 123000 with Accuracy: 88.27%
Test batch - 124500 with Accuracy: 88.28%
Test batch - 126000 with Accuracy: 88.27%
Test batch - 127500 with Accuracy: 88.24%
Test batch - 129000 with Accuracy: 88.23%
Test batch - 130500 with Accuracy: 88.23%
Test batch - 132000 with Accuracy: 88.23%
Test batch - 133500 with Accuracy: 88.22%
Test batch - 135000 with Accuracy: 88.23%
Test batch - 136500 with Accuracy: 88.23%
Test batch - 138000 with Accuracy: 88.23%
Test batch - 139500 with Accuracy: 88.23%
Test batch - 141000 with Accuracy: 88.22%
Test batch - 142500 with Accuracy: 88.22%
Test batch - 144000 with Accuracy: 88.20%
Test batch - 145500 with Accuracy: 88.20%
Test batch - 147000 with Accuracy: 88.19%
Test batch - 148500 with Accuracy: 88.19%
