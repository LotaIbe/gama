Initial model is AdaptiveRandomForestClassifier and hyperparameters are: {'n_models': 2, 'max_features': 5, 'lambda_value': 4, 'metric': (<class 'river.metrics.accuracy.Accuracy'>, {'cm': }), 'disable_weighted_vote': False, 'drift_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.001}), 'warning_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.01}), 'grace_period': 219, 'max_depth': None, 'split_criterion': 'gini', 'split_confidence': 0.0001, 'tie_threshold': 0.06999999999999999, 'leaf_prediction': 'mc', 'nb_threshold': 0, 'nominal_attributes': None, 'splitter': None, 'binary_split': False, 'max_size': 32, 'memory_estimate_period': 2000000, 'stop_mem_management': False, 'remove_poor_attrs': False, 'merit_preprune': True, 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is LeveragingBaggingClassifier(KNNClassifier) and hyperparameters are: {'model': (<class 'river.neighbors.knn_classifier.KNNClassifier'>, {'n_neighbors': 5, 'window_size': 1000, 'leaf_size': 30, 'p': 2, 'weighted': True}), 'n_models': 4, 'w': 5, 'adwin_delta': 0.005, 'bagging_method': 'bag', 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is AdaptiveRandomForestClassifier and hyperparameters are: {'n_models': 4, 'max_features': 3, 'lambda_value': 5, 'metric': (<class 'river.metrics.accuracy.Accuracy'>, {'cm': }), 'disable_weighted_vote': False, 'drift_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.001}), 'warning_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.01}), 'grace_period': 53, 'max_depth': None, 'split_criterion': 'info_gain', 'split_confidence': 0.0001, 'tie_threshold': 0.06999999999999999, 'leaf_prediction': 'nba', 'nb_threshold': 40, 'nominal_attributes': None, 'splitter': None, 'binary_split': False, 'max_size': 32, 'memory_estimate_period': 2000000, 'stop_mem_management': False, 'remove_poor_attrs': False, 'merit_preprune': True, 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is AdaptiveRandomForestClassifier and hyperparameters are: {'n_models': 9, 'max_features': 8, 'lambda_value': 6, 'metric': (<class 'river.metrics.accuracy.Accuracy'>, {'cm': }), 'disable_weighted_vote': False, 'drift_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.001}), 'warning_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.01}), 'grace_period': 141, 'max_depth': None, 'split_criterion': 'gini', 'split_confidence': 0.01, 'tie_threshold': 0.02, 'leaf_prediction': 'nb', 'nb_threshold': 20, 'nominal_attributes': None, 'splitter': None, 'binary_split': False, 'max_size': 32, 'memory_estimate_period': 2000000, 'stop_mem_management': False, 'remove_poor_attrs': False, 'merit_preprune': True, 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [HoeffdingAdaptiveTreeClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [HoeffdingAdaptiveTreeClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is LeveragingBaggingClassifier(Perceptron) and hyperparameters are: {'model': (<class 'river.linear_model.glm.Perceptron'>, {'l2': 0.0, 'clip_gradient': 1000000000000.0, 'initializer': (<class 'river.optim.initializers.Zeros'>, {})}), 'n_models': 8, 'w': 1, 'adwin_delta': 0.001, 'bagging_method': 'bag', 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is AdaptiveRandomForestClassifier and hyperparameters are: {'n_models': 11, 'max_features': 8, 'lambda_value': 2, 'metric': (<class 'river.metrics.accuracy.Accuracy'>, {'cm': }), 'disable_weighted_vote': False, 'drift_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.001}), 'warning_detector': (<class 'river.drift.adwin.ADWIN'>, {'delta': 0.01}), 'grace_period': 63, 'max_depth': None, 'split_criterion': 'hellinger', 'split_confidence': 0.0001, 'tie_threshold': 0.06999999999999999, 'leaf_prediction': 'nba', 'nb_threshold': 0, 'nominal_attributes': None, 'splitter': None, 'binary_split': False, 'max_size': 32, 'memory_estimate_period': 2000000, 'stop_mem_management': False, 'remove_poor_attrs': False, 'merit_preprune': True, 'seed': None}
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [HoeffdingAdaptiveTreeClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [AdaptiveRandomForestClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [HoeffdingAdaptiveTreeClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [LeveragingBaggingClassifier (
Current model is VotingClassifier and hyperparameters are: {'models': [HoeffdingAdaptiveTreeClassifier (
